version: "3.8"

services:
  fastapi:
    build:
      context: app/
      dockerfile: Dockerfile
    container_name: fastapi
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
    networks:
      - app-network
    expose:
      - "8000"

  db:
    image: postgres:17
    container_name: postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"       
      - "15672:15672"    
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: 1111
    networks:
      - app-network

  celery:
    build:
      context: app/tasks/
      dockerfile: Dockerfile.celery
    command: celery -A celery_app worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - redis
      - fastapi
    networks:
      - app-network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - fastapi
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
